package sms;


// Import all the necessary packages, classes, and interfaces
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abscyssa
 */
public class sales extends javax.swing.JFrame {
 
    /**
     *
     */
    public sales() {
        // Method that Netbeans swing Designer creates to initialize components
        initComponents();
        // Calling the function, Connect
        Connect();
        // Calling the function, load
        load();
        // Aligns itself with windows task bar; sets maximum screen
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
 
    
    // Session between Java application and database; factory of Statement, PreparedStatement, and DatabaseMetaData
    Connection con;
    // An object that represents a precompiled SQL statement
    PreparedStatement pst;
    // Implementation of TableModel that uses a Vector of Vectors to store the cell value objects
    DefaultTableModel df;
  
    
    // Connection method

    /**
     *
     */
    public void Connect(){
        try {
            //Register the driver
            Class.forName("com.mysql.jdbc.Driver");
             //Establishes a connection to the database
            con = DriverManager.getConnection("jdbc:mysql://localhost/stock","root","");
            //Handles the error
        }catch(ClassNotFoundException | SQLException ex){
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        item_id = new javax.swing.JTextField();
        item_des = new javax.swing.JTextField();
        pcs = new javax.swing.JTextField();
        unit_cost = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        customername = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel2.setText("Item Description:");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel3.setText("Item ID:");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel4.setText("Unit Cost:");

        item_id.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N

        item_des.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N

        pcs.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N

        unit_cost.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel8.setText("Pcs.:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(item_des, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3)
                        .addGap(21, 21, 21)
                        .addComponent(item_id))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(unit_cost))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pcs)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(item_des, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(item_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(pcs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(unit_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(0, 51, 204));
        jTable1.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item #", "Item Description", "Item ID", "Pcs.", "Unit Cost", "Amount"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Name of Customer:");

        customername.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jButton5.setText("Close");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 0, 0));

        jLabel5.setFont(new java.awt.Font("Bebas Neue", 0, 120)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("SALES");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sms/sales.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(434, 434, 434)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 129, Short.MAX_VALUE)
                .addComponent(jLabel5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(158, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(11, 11, 11))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customername, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
   
    // Add button
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // Returns the innertext of the elements
            String itemdescription = item_des.getText(); 
            String itemid = item_id.getText(); 
            String pieces =pcs.getText(); 
            String unitcost = unit_cost.getText(); 
            //Multiply the values of pieces and unitcost
            String totalamount = String.valueOf(Integer.parseInt(pieces)*Float.parseFloat(unitcost)); 
            
            //Insert the rows into the database
            pst = con.prepareStatement("insert into salestable(itemdescription, itemid, pieces, unitcost, totalamount)values(?,?,?,?,?)"); 
            pst.setString(1, itemdescription); 
            pst.setString(2, itemid); 
            pst.setString(3, pieces); 
            pst.setString(4, unitcost); 
            pst.setString(5, totalamount); 
            // Insert, update, and delete rows in those tables
            pst.executeUpdate();
            // Show a JOptionPane dialog with a text message "Item Added"
            JOptionPane.showMessageDialog(this, "Item Added"); 
            
            // Sets the current text to blank
            item_des.setText("");
            item_id.setText("");
            pcs.setText("");
            unit_cost.setText("");
            // Makes a request that item_des gets set to a focused state
            item_des.requestFocus();
            //Calling the function, load
            load();
            //Enables the button
            jButton1.setEnabled(true);
            // Handles the error
        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Edit button
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       // Loads the table
       df=(DefaultTableModel)jTable1.getModel();
       // Gets the data of the selected row
       int selected = jTable1.getSelectedRow();
       // Assigns the itemnumber as the starting position
       int itemnumber = Integer.parseInt(df.getValueAt(selected, 0).toString());
       // Returns the innertext of the elements
       String itemdescription = item_des.getText();
       String itemid = item_id.getText();
       String pieces = pcs.getText();
       String unitcost =unit_cost.getText();
       // Multiply the value of pieces and unitcost
       String totalamount = String.valueOf(Integer.parseInt(pieces)*Float.parseFloat(unitcost)); 

       try{
       // Update the rows in the database
       pst = con.prepareStatement("update salestable set itemdescription=?, itemid=?, pieces=?, unitcost=?, totalamount=? where itemnumber=?"); 
       pst.setString(1, itemdescription);
       pst.setString(2, itemid);
       pst.setString(3, pieces);
       pst.setString(4, unitcost);
       pst.setString(5, totalamount);
       pst.setInt(6, itemnumber);
        // Insert, update, and delete rows in those tables
       pst.executeUpdate();
        // Show a JOptionPane dialog with a text message "Item Updated"
       JOptionPane.showMessageDialog(this, "Item Updated");
       // Sets the current text to blank    
       item_des.setText("");
       item_id.setText("");
       pcs.setText("");
       unit_cost.setText("");
        // Makes a request that item_des gets set to a focused state
       item_des.requestFocus();
       // Calls the function, load
       load();
       // Handles the error
       }catch(SQLException ex){
           Logger.getLogger(sales.class.getName()).log(Level.SEVERE,null,ex);
       }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    
    // Delete button
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       // Loads the table
       df=(DefaultTableModel)jTable1.getModel();
       // Getting the data of the selected row
       int selected = jTable1.getSelectedRow();
       // Assign the itemnumber as the starting position
       int itemnumber = Integer.parseInt(df.getValueAt(selected, 0).toString());
      
       try{
       // Deletes the row in the database
       pst = con.prepareStatement("delete from salestable where itemnumber=?"); 
       pst.setInt(1, itemnumber);
        // Insert, update, and delete rows in those tables
       pst.executeUpdate();
         // Show a JOptionPane dialog with a text message "Item Deleted"
       JOptionPane.showMessageDialog(this, "Item Deleted");   
        // Sets the current text to blank    
       item_des.setText("");
       item_id.setText("");
       pcs.setText("");
       unit_cost.setText("");
       // Makes a request that item_des gets set to a focused state
       item_des.requestFocus();
       // Calls the function, load
       load();
       // Handles the error
       }catch(SQLException ex){
           Logger.getLogger(sales.class.getName()).log(Level.SEVERE,null,ex);
       }                                     
    }//GEN-LAST:event_jButton3ActionPerformed
    
    
    // Cancel button
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Sets all of the text to blank
        item_des.setText("");
         item_id.setText("");
         pcs.setText("");
         unit_cost.setText("");
         // Makes a request that item_des gets set to a focused state
         item_des.requestFocus();
         // Calls the function, load
         load();
         // Enables the add button
         jButton1.setEnabled(true);
    }//GEN-LAST:event_jButton4ActionPerformed
   
    
    // When you click a certain row in the table
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // Loads the table
        df=(DefaultTableModel)jTable1.getModel();
        // Gets the data of the selected row
        int selected = jTable1.getSelectedRow();
        // Assigns the item number as the starting position
        int itemnumber = Integer.parseInt(df.getValueAt(selected, 0).toString());
        // Assigns item description as the second row or at index 1
        item_des.setText(df.getValueAt(selected, 1).toString());
        // Assigns item id as the third row or at index 2
        item_id.setText(df.getValueAt(selected, 2).toString());
        // Assigns pieces as the fourth row or at index 3
        pcs.setText(df.getValueAt(selected, 3).toString());
        // Assigns unit cost as the fifth row or at index 4
        unit_cost.setText(df.getValueAt(selected, 4).toString());
        // Add button is not enabled
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jTable1MouseClicked
    
    
    // Close button
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // The frame will become invisible
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed
    
    
    // Function for the table to load

    /**
     *
     */
    public void load(){
        int a;
        try {
            // Select all the columns from the table
            pst = con.prepareStatement("select * from salestable"); 
            // Used to execute statements that returns tabular data; returns an object of rs
            ResultSet rs = pst.executeQuery();
            // Retrieves rd of rs
            ResultSetMetaData rd = rs.getMetaData();
            // Retrieves the number of columns of rd
            a = rd.getColumnCount();
            // Loads the table
            df = (DefaultTableModel)jTable1.getModel();
            // Sets the number of rows in the model to be 0
            df.setRowCount(0);
            // Finds and returns the next complete token from this scanner 
            while(rs.next()){
                // Creates vector class object
                Vector v2=new Vector();
                // Add itemnumber, itemdescription, itemid, pieces, unitcost, and totalamount to the vector with their corresponding indices
                for(int i=1; i<=a; i++){
                    v2.add(rs.getString("itemnumber"));
                    v2.add(rs.getString("itemdescription"));
                    v2.add(rs.getString("itemid"));
                    v2.add(rs.getString("pieces"));
                    v2.add(rs.getString("unitcost"));
                    v2.add(rs.getString("totalamount"));
                }
                // Adds the row to the end of the model
                df.addRow(v2);
            }
            // Handles the error
                    } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
  
    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
          
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField customername;
    private javax.swing.JTextField item_des;
    private javax.swing.JTextField item_id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField pcs;
    private javax.swing.JTextField unit_cost;
    // End of variables declaration//GEN-END:variables
}